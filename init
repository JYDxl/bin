#!/usr/bin/ruby

# gem update --system
# gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/
# gem install colorize

require 'colorize'

def warn
  system "echo 'bin/init mysql|mariadb|postgresql|rabbitmq|redis|mongodb|alpine|ubuntu|debian|arch|java|env'"
end

def exec(cmd)
  #noinspection RubyResolve
  puts "#{"==>".blue.bold} #{cmd.red.bold}"
  system cmd
end

app = ARGV[0]
warn && exit unless app

case app
  when 'mysql'
    exec 'docker build -t mysql-server ~/bin/dockerfile/mysql/'
    exec 'docker rm -f mysql-server'
    exec "docker run -d --net backend --name mysql-server -v ~/volume/mysql:/var/lib/mysql -p 3306:3306 mysql-server:latest --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --lower_case_table_names=1 --default-time_zone='+8:00'"
  when 'mariadb'
    exec 'docker build -t maria ~/bin/dockerfile/mariadb/'
    exec 'docker rm -f maria'
    exec "docker run -d --net backend --name maria -v ~/volume/maria:/var/lib/mysql -p 3307:3306 maria:latest --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --lower_case_table_names=1 --default-time_zone='+8:00'"
  when 'postgresql'
    exec 'docker build -t postgresql ~/bin/dockerfile/postgresql/'
    exec 'docker rm -f postgresql'
    exec 'docker run -d --net backend --name postgresql -v ~/volume/pgdata:/var/lib/postgresql/data -p 5432:5432 postgresql:latest'
  when 'rabbitmq'
    exec 'docker build -t rabbit ~/bin/dockerfile/rabbitmq/'
    exec 'docker rm -f rabbit'
    exec 'docker run -d --net backend --name rabbit --hostname rabbitmq -v ~/volume/rabbitmq:/var/lib/rabbitmq -p 15672:15672 -p 5672:5672 rabbit:latest'
  when 'redis'
    exec 'docker build -t redis-server ~/bin/dockerfile/redis/'
    exec 'docker rm -f redis-server'
    exec 'docker run -d --net backend --name redis-server -v ~/volume/redis:/data -p 6379:6379 redis-server:latest --requirepass "XLrootJYD713"'
  when 'mongodb'
    exec 'docker build -t mongodb ~/bin/dockerfile/mongodb/'
    exec 'docker rm -f mongodb'
    exec 'docker run -d --net backend --name mongodb -v ~/volume/mongo:/data/db -p 27017:27017 mongodb:latest'
  when 'alpine'
    exec 'docker build -t alpine-os ~/bin/dockerfile/alpine/'
    exec 'docker rm -f alpine-os'
    exec 'docker run -d --net backend --name alpine-os -it alpine-os:latest sh'
  when 'ubuntu'
    exec 'docker build -t ubuntu-os ~/bin/dockerfile/ubuntu/'
    exec 'docker rm -f ubuntu-os'
    exec 'docker run -d --net backend --name ubuntu-os -it ubuntu-os:latest /bin/bash'
  when 'debian'
    exec 'docker build -t debian-os ~/bin/dockerfile/debian/'
    exec 'docker rm -f debian-os'
    exec 'docker run -d --net backend --name debian-os -it debian-os:latest /bin/bash'
  when 'arch'
    exec 'docker build -t arch-os ~/bin/dockerfile/arch/'
    exec 'docker rm -f arch-os'
    exec 'docker run -d --net backend --name arch-os -it arch-os:latest /bin/bash'
  when 'java'
    exec 'docker build -t jre-alpine ~/bin/dockerfile/java/'
  when 'env'
    exec 'docker network create backend'
  else
    warn
end
