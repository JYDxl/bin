input {
  file {
    path => "/extra/starrocks/log/fe.audit.log*"
    type => "starrocks"
    start_position => "beginning"
    #调试时使用，禁止sincedb_path记录已读取的位置，从而使每次读取都从头开始
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^((\d{4}(-)\d{1,2}(-)\d{1,2})|(\d{4}(/)\d{1,2}(/)\d{1,2}))(\s)\d{1,2}:\d{1,2}:\d{1,2}"
      what => "previous"
      negate => true
      charset => "UTF-8"
      auto_flush_interval => 2
    }
  }
}

filter {
  if "starrocks" == [type] {
    dissect {
      mapping => {
        #%{}中间不写名称表示忽略该值
        "message" => "%{datetime} %{+datetime} [%{queryType}] |Client=%{client}|User=%{user}|Db=%{db}|State=%{state}|Time=%{time}|ScanBytes=%{scanBytes}|ScanRows=%{scanRows}|ReturnRows=%{returnRows}|StmtId=%{stmtId}|QueryId=%{queryId}|IsQuery=%{isQuery}|feIp=%{feIp}|Stmt=/*%{}*/ %{stmt}|Digest=%{}"
      }
    }
    if "slow_query" == [queryType] {
      clone {
        clones => ["starrocks-slow"]
      }
    }
    if [stmt] =~ /^(?i)(create|drop|alter) .*$/ {
      clone {
        clones => ["starrocks-change"]
      }
    }
    if [stmt] =~ /^(?i)(insert into).*$/ {
      clone {
        clones => ["starrocks-insert"]
      }
    }
  }
}

output {
  if "starrocks" == [type] {
    kafka {
      topic_id => "starrocks"
      bootstrap_servers => "kafka-cluster1:9092,kafka-cluster2:9093,kafka-cluster3:9094"
      codec => json
    }
    stdout {
    }
  }
  if "starrocks-slow" == [type] {
    kafka {
      topic_id => "starrocks-slow"
      bootstrap_servers => "kafka-cluster1:9092,kafka-cluster2:9093,kafka-cluster3:9094"
      codec => json
    }
    stdout {
    }
  }
  if "starrocks-change" == [type] {
    kafka {
      topic_id => "starrocks-change"
      bootstrap_servers => "kafka-cluster1:9092,kafka-cluster2:9093,kafka-cluster3:9094"
      codec => json
    }
    stdout {
    }
  }
  if "starrocks-insert" == [type] {
    kafka {
      topic_id => "starrocks-insert"
      bootstrap_servers => "kafka-cluster1:9092,kafka-cluster2:9093,kafka-cluster3:9094"
      codec => json
    }
    stdout {
    }
  }
}
